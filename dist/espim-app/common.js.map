{"version":3,"sources":["./src/app/security/permissions.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAUlB;AAC6B;AACX;AAGG;AACO;;;;;;AAGrD;IAME,0BACmB,oBAAyC,EACzC,aAA2B,EAC3B,OAAsB,EACtB,OAAe;QAHf,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAe;QACtB,YAAO,GAAP,OAAO,CAAQ;QANlC,aAAQ,GAAW,UAAU,CAAC;IAO3B,CAAC;IAEJ,sCAAW,GAAX,UAAY,IAA4B,EAAE,KAA0B;QAClE,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACnF,CAAC;IACD,2CAAgB,GAAhB,UAAiB,IAA4B,EAAE,KAA0B;QACvE,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,6DAA6D;IAC7D,kCAAO,GAAP,UAAQ,KAAY,EAAE,QAAsB;QAC1C,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACzE,CAAC;IAEO,2CAAgB,GAAxB,UAAyB,MAAmB;QAA5C,iBAyBC;QAxBC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE;YACpC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,iEAAS,CAAC,MAAM,CAAC,EAAE;YACrB,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;SACb;QAED,OAAQ,MAA2B;aAChC,IAAI,CAAC,UAAC,IAAI;YACT,IAAI,CAAC,IAAI,EAAE;gBACT,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;aACD,KAAK,CAAC;YACL,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,2CAAgB,GAAxB;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,kDAAkD,EAAE,gBAAgB,CAAC,CAAC;QAC3F,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,CAAC;oFApDU,gBAAgB;uGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;2BApBpB;CA2EC;AArD4B;6FAAhB,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n} from '@angular/router';\nimport { NgxPermissionsGuard } from 'ngx-permissions';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\nimport { isBoolean } from '../util/functions';\nimport { LoginService } from './login/login.service';\n\ntype ReturnGuard = Observable<boolean> | Promise<boolean> | boolean;\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionsGuard implements CanActivate, CanActivateChild, CanLoad {\n  routeURL: string = '/private';\n\n  constructor(\n    private readonly _ngxPermissionsGuard: NgxPermissionsGuard,\n    private readonly _loginService: LoginService,\n    private readonly _toastr: ToastrService,\n    private readonly _router: Router\n  ) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): ReturnGuard {\n    return this._checkPermission(this._ngxPermissionsGuard.canActivate(next, state));\n  }\n  canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): ReturnGuard {\n    return this._checkPermission(this._ngxPermissionsGuard.canActivateChild(next, state));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  canLoad(route: Route, segments: UrlSegment[]): ReturnGuard {\n    return this._checkPermission(this._ngxPermissionsGuard.canLoad(route));\n  }\n\n  private _checkPermission(loaded: ReturnGuard): ReturnGuard {\n    if (!this._loginService.isLoggedIn()) {\n      return false;\n    }\n\n    if (isBoolean(loaded)) {\n      if (!loaded) {\n        this._showDenyMessage();\n        return false;\n      }\n      return true;\n    }\n\n    return (loaded as Promise<boolean>)\n      .then((load) => {\n        if (!load) {\n          this._showDenyMessage();\n          return false;\n        }\n        return true;\n      })\n      .catch(() => {\n        this._showDenyMessage();\n        return false;\n      });\n  }\n\n  private _showDenyMessage(): void {\n    this._toastr.warning('Você não tem permissão para acessar esta página.', 'Acesso Negado!');\n    this._router.navigate([this.routeURL]);\n  }\n}\n"],"sourceRoot":"webpack:///"}